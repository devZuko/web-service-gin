name: Go CI

on:
  push:
    branches: [ "development" ]
  pull_request:
    branches: [ "development" ]
    types: [opened, synchronize, reopened]

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version-file: 'go.mod'   # usa a versão do go.mod
          cache: true

      - name: Build
        run: go build -v ./...

      - name: Run unit tests
        id: tests
        run: |
          go test -v -race -coverprofile=coverage.out ./...

      - name: Calculate coverage
        id: coverage
        if: always()
        run: |
          if [ -f coverage.out ]; then
            pct=$(go tool cover -func=coverage.out | awk '/total:.*statements/ {print $3}')
            echo "percent=$pct" >> $GITHUB_OUTPUT
          else
            echo "percent=N/A" >> $GITHUB_OUTPUT
          fi

      - name: Notify Discord (PR only)
        if: always() && github.event_name == 'pull_request'
        env:
          DISCORD_WEBHOOK_URL: ${{ secrets.DISCORD_WEBHOOK_URL }}
          STATUS: ${{ steps.tests.outcome }}                      # success | failure
          PR_NUMBER: ${{ github.event.pull_request.number }}
          PR_TITLE: ${{ github.event.pull_request.title }}
          PR_URL: ${{ github.event.pull_request.html_url }}
          REPO: ${{ github.repository }}
          ACTOR: ${{ github.actor }}
          BRANCH: ${{ github.head_ref }}
          SHA: ${{ github.event.pull_request.head.sha }}
          COVERAGE: ${{ steps.coverage.outputs.percent }}
        run: |
          if [ "$STATUS" = "success" ]; then EMOJI="✅"; else EMOJI="❌"; fi
          MESSAGE="${EMOJI} Go tests: ${STATUS^^}\nRepo: $REPO\nPR #$PR_NUMBER: $PR_TITLE\nBranch: $BRANCH\nCommit: ${SHA:0:7}\nAutor: $ACTOR\nCoverage: $COVERAGE\nLink: $PR_URL"
          payload=$(jq -n --arg content "$MESSAGE" '{content: $content}')
          curl -sS -H "Content-Type: application/json" -X POST -d "$payload" "$DISCORD_WEBHOOK_URL"